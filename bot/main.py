"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –µ–≥–æ –∑–∞–ø—É—Å–∫ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –µ–≥–æ –±–∞–∑–æ–≤–∞—è
–ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã.
"""

import asyncio
import logging

from sqlalchemy.ext.asyncio import AsyncSession
from telebot import async_telebot, logger
from telebot.types import Message

from database.confdb import session
from database.models import User
from bot.admin_panel import send_message_to_everyone, get_count_users
from bot.other.keyboards import student_kb, admin_kb
from bot.other.text_for_messages import welcome_messages, info_messages
from bot.utils.getter_variables import API_TOKEN
from bot.utils.utils import lazy_get_user_by_chat_id
from bot.schedule.update_schedule import daily_schedule_updater, refresh_schedule_data
from bot.schedule.getters_schedule import (
    get_today_schedule,
    get_tomorrow_schedule,
    get_weekly_schedule,
)
from bot.registration import (
    registered_stage_kyrs,
    register_user,
    registered_stage_formob,
    registered_stage_group,
)


bot = async_telebot.AsyncTeleBot(API_TOKEN)
logger.level = logging.INFO


@bot.message_handler(commands=["start"])
async def command_start(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:
        - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
        - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
        - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:
        - –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ.
        - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –∫—É—Ä—Å–∞.
    """
    try:
        user: User = await lazy_get_user_by_chat_id(
            chat_id=message.chat.id, session=session
        )
        if user.admin is True:
            await bot.send_message(
                chat_id=message.chat.id,
                text=welcome_messages,
                reply_markup=admin_kb(),
            )
            user.status = "admin_panel"
            await session.commit()
        else:
            await bot.send_message(
                chat_id=message.chat.id,
                text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:",
                reply_markup=student_kb(),
            )

    except ValueError:
        user: User = await register_user(message=message, session=session)
        await bot.send_message(chat_id=message.chat.id, text=welcome_messages)
        await bot.send_message(
            chat_id=message.chat.id, text="–ù–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫—É—Ä—Å:"
        )
        logger.info(
            f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–¥: {message.chat.username}:{user.chat_id}"
        )


@bot.message_handler(commands=["info"])
async def command_info(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /info

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    await bot.send_message(
        chat_id=message.chat.id,
        text=info_messages,
        parse_mode="HTML",
    )
    logger.info(f"{message.chat.username}:{message.chat.id} –≤–≤–µ–ª /info")


@bot.message_handler(commands=["changedata"])
async def changedata(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /changedata

    –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ–π—Ç–∏
    –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ.
    """
    user: User = await lazy_get_user_by_chat_id(
        chat_id=message.chat.id, session=session
    )
    user.status = "registration"
    user.substatus = "registered_stage_kyrs"
    user.formob = None
    user.kyrs = None
    user.gruppa = None
    await session.commit()
    await bot.send_message(
        chat_id=message.chat.id, text="–ù–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫—É—Ä—Å:"
    )
    logger.info(
        f"{message.chat.username}:{message.chat.id} –Ω–∞—á–∞–ª –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ."
    )


@bot.message_handler(
    func=lambda message: message.text
    in [
        "üìå –ù–∞ —Å–µ–≥–æ–¥–Ω—è",
        "üåÖ –ù–∞ –∑–∞–≤—Ç—Ä–∞",
        "üìÜ –ù–∞ –Ω–µ–¥–µ–ª—é",
        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º",
        "–£–∑–Ω–∞—Ç—å –∫–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤",
        "–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
    ]
)
async def user_panel(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å
    –≤—ã–±–æ—Ä–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.

    - –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
        - "üìå –ù–∞ —Å–µ–≥–æ–¥–Ω—è": –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.
        - "üåÖ –ù–∞ –∑–∞–≤—Ç—Ä–∞": –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.
        - "üìÜ –ù–∞ –Ω–µ–¥–µ–ª—é": –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥.

    - –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:
        - "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º": –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–ø—Ä–∞–≤–∫–∏
          —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
        - "–£–∑–Ω–∞—Ç—å –∫–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤": –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
          –æ —á–∏—Å–ª–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        - "–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ": –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –±–æ—Ç–µ.

    """
    user: User = await lazy_get_user_by_chat_id(
        chat_id=message.chat.id, session=session
    )

    if message.text == "üìå –ù–∞ —Å–µ–≥–æ–¥–Ω—è":
        schedule: str = await get_today_schedule(
            session=session, chat_id=message.chat.id
        )
        await bot.send_message(
            chat_id=message.chat.id, text=schedule, parse_mode="HTML"
        )

        logger.info(
            f"{message.chat.username}:{message.chat.id} –ø–æ–ª—É—á–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
        )
        return True

    if message.text == "üåÖ –ù–∞ –∑–∞–≤—Ç—Ä–∞":
        schedule: str = await get_tomorrow_schedule(
            session=session, chat_id=message.chat.id
        )
        await bot.send_message(
            chat_id=message.chat.id, text=schedule, parse_mode="HTML"
        )

        logger.info(
            f"{message.chat.username}:{message.chat.id} –ø–æ–ª—É—á–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"
        )
        return True

    if message.text == "üìÜ –ù–∞ –Ω–µ–¥–µ–ª—é":
        schedule: str = await get_weekly_schedule(
            session=session, chat_id=message.chat.id
        )
        await bot.send_message(
            chat_id=message.chat.id, text=schedule, parse_mode="HTML"
        )

        logger.info(
            f"{message.chat.username}:{message.chat.id} –ø–æ–ª—É—á–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"
        )
        return True

    if (
        message.text
        in ["–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º", "–£–∑–Ω–∞—Ç—å –∫–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤", "–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"]
        and user.admin is True
    ):
        if message.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º":
            await bot.send_message(
                chat_id=message.chat.id,
                text="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:",
            )
            user.substatus = "send_message_everyone"
            await session.commit()
            return True

        if message.text == "–£–∑–Ω–∞—Ç—å –∫–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤":
            count_users = await get_count_users(session=session)
            await bot.send_message(
                chat_id=message.chat.id,
                text=f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count_users}",
            )
            return True

        if message.text == "–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            await bot.send_message(
                chat_id=message.chat.id,
                text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?",
            )
            user.substatus = "update_schedule"
            await session.commit()
            return True


@bot.message_handler(content_types=["text"])
async def main(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–æ–¥—Å—Ç–∞—Ç—É—Å–∞.

    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏,
      –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–¥—Å—Ç–∞—Ç—É—Å–∞:
        - "registered_stage_kyrs": –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫—É—Ä—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - "registered_stage_formob": –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è.
        - "registered_stage_group": –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
        - "send_message_everyone": –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
            - –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
              —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
            - –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–º–µ–Ω—ã, –æ—Ç–º–µ–Ω—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É.
        - "update_schedule": –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
            - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç "–î–∞", –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
            - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç "–ù–µ—Ç", –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """
    try:
        user: User = await lazy_get_user_by_chat_id(
            chat_id=message.chat.id, session=session
        )

        if user.status == "registration":
            if user.substatus == "registered_stage_kyrs":
                await registered_stage_kyrs(
                    message=message, user=user, bot=bot, session=session
                )
                logger.info(
                    f"{message.chat.username}:{message.chat.id} –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —Å—É–±—Å—Ç–∞—Ç—É—Å: registered_stage_kyrs"
                )
            elif user.substatus == "registered_stage_formob":
                await registered_stage_formob(
                    message=message, user=user, bot=bot, session=session
                )
                logger.info(
                    f"{message.chat.username}:{message.chat.id} –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —Å—É–±—Å—Ç–∞—Ç—É—Å: registered_stage_formob"
                )
            elif user.substatus == "registered_stage_group":
                await registered_stage_group(
                    message=message, user=user, bot=bot, session=session
                )
                logger.info(
                    f"{message.chat.username}:{message.chat.id} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ."
                )

            return True

        if user.status == "admin_panel":
            if user.substatus == "send_message_everyone":
                if message.text not in ["0", "O", "o", "–û—Ç–º–µ–Ω–∞", "–æ—Ç–º–µ–Ω–∞", "–æ", "–û"]:
                    await send_message_to_everyone(
                        session=session, bot=bot, message=message
                    )
                    await bot.send_message(
                        chat_id=message.chat.id,
                        text="–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",
                    )
                    logger.info(
                        f"{message.chat.username}:{message.chat.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message.text}'.'"
                    )
                else:
                    await bot.send_message(
                        chat_id=message.chat.id, text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –æ—Ç–º–µ–Ω–µ–Ω–∞!"
                    )

                user.substatus = None
                await session.commit()
                return True

            if user.substatus == "update_schedule":
                if message.text == "–î–∞":
                    await refresh_schedule_data(session=session)
                    await bot.send_message(
                        chat_id=message.chat.id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ."
                    )
                    logger.info(
                        f"{message.chat.username}:{message.chat.id} –æ–±–Ω–æ–≤–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
                    )
                else:
                    await bot.send_message(
                        chat_id=message.chat.id, text="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ."
                    )

                user.substatus = None
                await session.commit()
                return True

    except ValueError:
        await command_start(message=message)


async def start(session: AsyncSession):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    """
    asyncio.create_task(daily_schedule_updater(session))
    await bot.infinity_polling()


if __name__ == "__main__":
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    asyncio.run(start(session=session))
