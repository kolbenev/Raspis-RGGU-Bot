"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
"""

from typing import List
from datetime import datetime, timedelta
from collections import defaultdict

from sqlalchemy.ext.asyncio import AsyncSession

from database.models import User, Schedule
from bot.utils.utils import get_user_with_group_and_schedule_by_chat_id


days_of_the_week = {
    0: "–ü–ù",
    1: "–í–¢",
    2: "–°–†",
    3: "–ß–¢",
    4: "–ü–¢",
    5: "–°–ë",
    6: "–í–°",
}


def formatter_schedule(list_schedule: List[Schedule]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥–∞—Ç–µ, –ø–∞—Ä–∞–º –∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–∏–π, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π
    –±–ª–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞—Ä–∞—Ö, –ª–µ–∫—Ü–∏—è—Ö, –∞—É–¥–∏—Ç–æ—Ä–∏—è—Ö –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö.
    –¢–µ–∫—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ç–µ–≥–æ–≤ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

    :param list_schedule: –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    schedule_dict = defaultdict(list)

    for line in list_schedule:
        key = (line.date, line.para, line.lecture_time)
        schedule_dict[key].append(line)

    result = ""
    current_date = None

    for (date, para, lecture_time), lessons in schedule_dict.items():
        if date != current_date:
            if current_date is not None:
                result += "\n"
            result += f"<b>{date}:</b>\n"
            current_date = date

        result += f"<u>{para}-—è –ø–∞—Ä–∞ ({lecture_time})" f":</u>\n"
        for lesson in lessons:
            result += f"{lesson.lesson} ({lesson.type_lesson}) - –∞—É–¥: {lesson.audience}\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {lesson.teacher_name}\n"
        result += "\n"

    return result


async def get_today_schedule(session: AsyncSession, chat_id: int) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ—ë —Ñ–æ—Ä–º–∞—Ç–∞ –∏—â–µ—Ç –∑–∞–Ω—è—Ç–∏—è
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
    —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.

    :param chat_id: –ò–¥ —á–∞—Ç–∞.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    current_date = datetime.now()
    formatted_date = f"{current_date.strftime("%d.%m.%Y").upper()} {days_of_the_week[current_date.weekday()]}"

    user: User = await get_user_with_group_and_schedule_by_chat_id(
        chat_id=chat_id, session=session
    )
    today_schedule = [
        schedule for schedule in user.group.schedule if schedule.date == formatted_date
    ]

    done_schedule = formatter_schedule(today_schedule)
    if done_schedule:
        return done_schedule
    else:
        return "–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç! üéâ"


async def get_tomorrow_schedule(session: AsyncSession, chat_id: int) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞—à–Ω—é—é –¥–∞—Ç—É –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ—ë —Ñ–æ—Ä–º–∞—Ç–∞ –∏—â–µ—Ç
    –∑–∞–Ω—è—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å
    –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.

    :param chat_id: –ò–¥ —á–∞—Ç–∞.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    tomorrow_date = datetime.now() + timedelta(days=1)
    formatted_date = f"{tomorrow_date.strftime("%d.%m.%Y").upper()} {days_of_the_week[tomorrow_date.weekday()]}"

    user: User = await get_user_with_group_and_schedule_by_chat_id(
        chat_id=chat_id, session=session
    )
    tomorrow_schedule = [
        schedule for schedule in user.group.schedule if schedule.date == formatted_date
    ]

    done_schedule = formatter_schedule(tomorrow_schedule)
    if done_schedule:
        return done_schedule
    else:
        return "–ó–∞–≤—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç! üéä"


async def get_weekly_schedule(session: AsyncSession, chat_id: int) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    –∏—Ö –≤ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é.

    :param chat_id: –ò–¥ —á–∞—Ç–∞.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    user: User = await get_user_with_group_and_schedule_by_chat_id(
        chat_id=chat_id, session=session
    )

    done_schedule = formatter_schedule(user.group.schedule)
    if done_schedule:
        return done_schedule
    else:
        return "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç! ü•≥"
