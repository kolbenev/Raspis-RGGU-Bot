from datetime import datetime, timedelta
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.kbd import Select

from bot.utils.user_utils.utils import send_correct_menu
from database.confdb import session
from database.utils import get_user_by_user_id
from api.rsuh_api import RgguScheduleClient
from config.logger import logger

from bot.utils.user_utils.scheduler_getter import (
    MOSCOW_TZ,
    filter_tbl_days_between,
    format_day_block,
)


SEPARATOR_BETWEEN_DAYS = "‚Äî"


def format_week_text(payload, start_date, end_date) -> str:
    """
    –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    –Ω–∞ –Ω–µ–¥–µ–ª—é –∏–∑ payload.
    """
    days = filter_tbl_days_between(payload, start_date, end_date)
    if not days:
        return (
            f"üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n"
            f"{start_date.strftime('%d.%m.%Y')}-{end_date.strftime('%d.%m.%Y')}\n\n–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π. üéâ"
        )

    blocks = [format_day_block(day) for day in days]
    header = (
        f"üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n"
        f"{start_date.strftime('%d.%m.%Y')}-{end_date.strftime('%d.%m.%Y')}"
    )
    return header + "\n\n" + f"\n\n{SEPARATOR_BETWEEN_DAYS}\n\n".join(blocks)


async def on_room_chosen_show_schedule(
    callback: CallbackQuery, widget: Select, dialog_manager: DialogManager, item_id: str
):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π
    –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ –≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    from_user = callback.from_user
    logger.debug(f"{from_user.username}:{from_user.id} –≤—ã–±—Ä–∞–ª –∞—É–¥–∏—Ç–æ—Ä–∏—é: {item_id}")

    try:
        async with RgguScheduleClient() as api:
            payload = await api.get_schedule_by_room(room_id=str(item_id))

        start_date = datetime.now(MOSCOW_TZ).date()
        end_date = start_date + timedelta(days=6)

        text = format_week_text(payload, start_date, end_date)
        await callback.message.answer(text)

        user = await get_user_by_user_id(
            user_id=from_user.id,
            session=session,
        )
        await send_correct_menu(
            user=user,
            dialog_manager=dialog_manager,
        )

    except Exception as e:
        logger.exception(
            f"{from_user.username}:{from_user.id} –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ {item_id}: {e!r}"
        )
        await callback.message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üôè"
        )


async def on_teacher_chosen_show_schedule(
    callback: CallbackQuery, widget: Select, dialog_manager: DialogManager, item_id: str
):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É
    –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –∏ –≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    from_user = callback.from_user
    logger.debug(
        f"{from_user.username}:{from_user.id} –≤—ã–±—Ä–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–ø—Ä–æ—Å–º–æ—Ç—Ä): {item_id}"
    )

    try:
        async with RgguScheduleClient() as api:
            payload = await api.get_schedule_by_teacher(teacher_id=str(item_id))

        start_date = datetime.now(MOSCOW_TZ).date()
        end_date = start_date + timedelta(days=6)

        text = format_week_text(payload, start_date, end_date)
        await callback.message.answer(text)

        user = await get_user_by_user_id(
            user_id=from_user.id,
            session=session,
        )
        await send_correct_menu(
            user=user,
            dialog_manager=dialog_manager,
        )

    except Exception as e:
        logger.exception(
            f"{from_user.username}:{from_user.id} –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é {item_id}: {e!r}"
        )
        await callback.message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ üôè"
        )
