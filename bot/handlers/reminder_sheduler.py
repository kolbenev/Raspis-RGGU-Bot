"""
–ú–æ–¥—É–ª—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞.
"""

from datetime import datetime

from aiogram import Router
from aiogram.types import Message

from bot.middlewares.user_permissions import is_registered
from database.confdb import session
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.middlewares.logger import logger
from bot.handlers.states import UserState
from bot.utils.utils import lazy_get_user_by_chat_id
from bot.utils.other.keyboards import time_kb, student_kb


router = Router()


@router.message(Command("settime"))
@is_registered
async def reminder_sheduler(message: Message, state: FSMContext) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä–µ–º—è
    –≤ –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –±—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
    """
    await message.answer(
        text="üïô –í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:",
        reply_markup=time_kb(),
    )
    await state.set_state(UserState.reminder)


@router.message(UserState.reminder)
async def reminder_sheduler(message: Message, state: FSMContext) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∑–∞–Ω–æ—Å–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤
    –∑–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    """
    user_input = message.text.strip()
    user = await lazy_get_user_by_chat_id(chat_id=message.chat.id, session=session)

    if message.text == "–û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ üò•":
        user.reminder = None
        await session.commit()
        await state.clear()
        await message.answer(
            text="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã ‚úÖ",
            reply_markup=student_kb(),
        )
        logger.info(
            f"{message.chat.username}{message.chat.id} –æ—Ç–∫–ª—é—á–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ."
        )
        return

    try:
        reminder_time = datetime.strptime(user_input, "%H:%M").time()
    except ValueError:
        await message.answer(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:00)."
        )
        logger.info(
            f"{message.chat.username}{message.chat.id} –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏."
        )
        return

    user.reminder = reminder_time
    await session.commit()

    await message.answer(
        text=f"üéà –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {reminder_time.strftime('%H:%M')}!",
        reply_markup=student_kb(),
    )
    logger.info(
        f"{message.chat.username}{message.chat.id} —É—Å—Ç–∞–Ω–æ–≤–∏–ª –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ {reminder_time}"
    )
    await state.clear()
